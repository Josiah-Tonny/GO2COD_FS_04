{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\portfolio-cms\\\\frontend\\\\src\\\\components\\\\common\\\\PrivateRoute.js\",\n  _s = $RefreshSig$();\n// components/common/PrivateRoute.js\nimport React from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  children\n}) => {\n  _s();\n  var _authState$user;\n  const {\n    authState\n  } = useAuth();\n  const location = useLocation();\n  if (!authState.isAuthenticated) {\n    // Redirect to login while saving the attempted URL\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      state: {\n        from: location\n      },\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Check for role-based access if needed\n  if (((_authState$user = authState.user) === null || _authState$user === void 0 ? void 0 : _authState$user.role) !== 'admin') {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 12\n    }, this);\n  }\n  return children;\n};\n_s(PrivateRoute, \"BzkY5CLlWySyUA3gORXFKxr0ZJI=\", false, function () {\n  return [useAuth, useLocation];\n});\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","Navigate","useLocation","useAuth","jsxDEV","_jsxDEV","PrivateRoute","children","_s","_authState$user","authState","location","isAuthenticated","to","state","from","replace","fileName","_jsxFileName","lineNumber","columnNumber","user","role","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/portfolio-cms/frontend/src/components/common/PrivateRoute.js"],"sourcesContent":["// components/common/PrivateRoute.js\r\nimport React from 'react';\r\nimport { Navigate, useLocation } from 'react-router-dom';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\n\r\nconst PrivateRoute = ({ children }) => {\r\n  const { authState } = useAuth();\r\n  const location = useLocation();\r\n\r\n  if (!authState.isAuthenticated) {\r\n    // Redirect to login while saving the attempted URL\r\n    return <Navigate to=\"/login\" state={{ from: location }} replace />;\r\n  }\r\n\r\n  // Check for role-based access if needed\r\n  if (authState.user?.role !== 'admin') {\r\n    return <Navigate to=\"/\" replace />;\r\n  }\r\n\r\n  return children;\r\n};\r\n\r\nexport default PrivateRoute;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AACxD,SAASC,OAAO,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAAA,IAAAC,eAAA;EACrC,MAAM;IAAEC;EAAU,CAAC,GAAGP,OAAO,CAAC,CAAC;EAC/B,MAAMQ,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9B,IAAI,CAACQ,SAAS,CAACE,eAAe,EAAE;IAC9B;IACA,oBAAOP,OAAA,CAACJ,QAAQ;MAACY,EAAE,EAAC,QAAQ;MAACC,KAAK,EAAE;QAAEC,IAAI,EAAEJ;MAAS,CAAE;MAACK,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpE;;EAEA;EACA,IAAI,EAAAX,eAAA,GAAAC,SAAS,CAACW,IAAI,cAAAZ,eAAA,uBAAdA,eAAA,CAAgBa,IAAI,MAAK,OAAO,EAAE;IACpC,oBAAOjB,OAAA,CAACJ,QAAQ;MAACY,EAAE,EAAC,GAAG;MAACG,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpC;EAEA,OAAOb,QAAQ;AACjB,CAAC;AAACC,EAAA,CAfIF,YAAY;EAAA,QACMH,OAAO,EACZD,WAAW;AAAA;AAAAqB,EAAA,GAFxBjB,YAAY;AAiBlB,eAAeA,YAAY;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}