{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\portfolio-cms\\\\frontend\\\\src\\\\components\\\\auth\\\\EmailVerification.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { authService } from '../../services/authService';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmailVerification = () => {\n  _s();\n  const {\n    token\n  } = useParams();\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    const verifyEmail = async () => {\n      try {\n        await authService.verifyEmail(token);\n        setMessage('Email verified successfully');\n      } catch (err) {\n        setMessage('Verification failed');\n      }\n    };\n    verifyEmail();\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 10\n  }, this);\n};\n_s(EmailVerification, \"HfZmVSl0k/y0lkMnMHybH4Qj9X8=\", false, function () {\n  return [useParams];\n});\n_c = EmailVerification;\nexport default EmailVerification;\nvar _c;\n$RefreshReg$(_c, \"EmailVerification\");","map":{"version":3,"names":["React","useState","useEffect","authService","useParams","jsxDEV","_jsxDEV","EmailVerification","_s","token","message","setMessage","verifyEmail","err","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/portfolio-cms/frontend/src/components/auth/EmailVerification.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { authService } from '../../services/authService';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst EmailVerification = () => {\r\n  const { token } = useParams();\r\n  const [message, setMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    const verifyEmail = async () => {\r\n      try {\r\n        await authService.verifyEmail(token);\r\n        setMessage('Email verified successfully');\r\n      } catch (err) {\r\n        setMessage('Verification failed');\r\n      }\r\n    };\r\n    verifyEmail();\r\n  }, [token]);\r\n\r\n  return <div>{message}</div>;\r\n};\r\n\r\nexport default EmailVerification;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,4BAA4B;AACxD,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM;IAAEC;EAAM,CAAC,GAAGL,SAAS,CAAC,CAAC;EAC7B,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACd,MAAMU,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMT,WAAW,CAACS,WAAW,CAACH,KAAK,CAAC;QACpCE,UAAU,CAAC,6BAA6B,CAAC;MAC3C,CAAC,CAAC,OAAOE,GAAG,EAAE;QACZF,UAAU,CAAC,qBAAqB,CAAC;MACnC;IACF,CAAC;IACDC,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACH,KAAK,CAAC,CAAC;EAEX,oBAAOH,OAAA;IAAAQ,QAAA,EAAMJ;EAAO;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAC7B,CAAC;AAACV,EAAA,CAjBID,iBAAiB;EAAA,QACHH,SAAS;AAAA;AAAAe,EAAA,GADvBZ,iBAAiB;AAmBvB,eAAeA,iBAAiB;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}