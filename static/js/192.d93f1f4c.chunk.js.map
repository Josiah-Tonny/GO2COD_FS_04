{"version":3,"file":"static/js/192.d93f1f4c.chunk.js","mappings":"iLAEA,MAAMA,EAAU,iCAEHC,EACDC,gBACeC,EAAAA,EAAMC,IAAIJ,IACjBK,KAHPJ,EAWKC,gBACSC,EAAAA,EAAMG,OAAO,GAAGN,KAAWO,MAClCF,K,aCbpB,MAwFA,EAxFwBG,KACtB,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAAWC,IAAgBF,EAAAA,EAAAA,WAAS,IACpCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,OAC5BK,EAAkBC,IAAuBN,EAAAA,EAAAA,UAAS,OAEzDO,EAAAA,EAAAA,YAAU,KACRC,GAAY,GACX,IAEH,MAAMA,EAAajB,UACjB,IACEW,GAAa,GACb,MAAMR,QAAaJ,IACnBS,EAASL,EACX,CAAE,MAAOe,GACPL,EAAS,8BACTM,QAAQP,MAAM,wBAAyBM,EACzC,CAAC,QACCP,GAAa,EACf,GAgBF,OAAID,GAAkBU,EAAAA,EAAAA,KAAA,OAAKC,UAAU,MAAKC,SAAC,eACvCV,GAAcQ,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mBAAkBC,SAAEV,KAGnDW,EAAAA,EAAAA,MAAA,OAAKF,UAAU,MAAKC,SAAA,EAClBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,yCAAwCC,SAAA,EACrDF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,qBAAoBC,SAAC,uBACnCF,EAAAA,EAAAA,KAAA,UACEC,UAAU,2CACVG,QAASA,OAAiCF,SAC3C,oBAKe,IAAjBf,EAAMkB,QACLL,EAAAA,EAAAA,KAAA,KAAGC,UAAU,gBAAeC,SAAC,yBAE7BF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,YAAWC,SACtBf,EAAMmB,KAAKC,IACVP,EAAAA,EAAAA,KAAA,MAAmBC,UAAU,wBAAuBC,UAClDC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oCAAmCC,SAAA,EAChDC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,gBAAeC,SAAEK,EAAKC,SACpCR,EAAAA,EAAAA,KAAA,KAAGC,UAAU,gBAAeC,SAAEK,EAAKE,gBAErCN,EAAAA,EAAAA,MAAA,OAAKF,UAAU,YAAWC,SAAA,EACxBF,EAAAA,EAAAA,KAAA,UACEC,UAAU,2CACVG,QAASA,OAAyBF,SACnC,UAGDF,EAAAA,EAAAA,KAAA,UACEC,UAAW,4CACTP,IAAqBa,EAAKG,IAAM,aAAe,IAEjDN,QAASA,IAlDNxB,WACnB,IACEe,EAAoBV,SACdN,EAA2BM,GACjCG,EAASD,EAAMwB,QAAQJ,GAASA,EAAKG,MAAQzB,IAC/C,CAAE,MAAOa,GACPC,QAAQP,MAAM,uBAAwBM,GACtCc,MAAM,wBACR,CAAC,QACCjB,EAAoB,KACtB,GAwC+BkB,CAAaN,EAAKG,KACjCI,SAAUpB,IAAqBa,EAAKG,IAAIR,SAEvCR,IAAqBa,EAAKG,IAAM,cAAgB,kBApBhDH,EAAKG,WA4BhB,C","sources":["services/blogService.js","components/admin/BlogPostManager.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/api/blog';\r\n\r\nexport const blogService = {\r\n  getPosts: async () => {\r\n    const response = await axios.get(API_URL);\r\n    return response.data;\r\n  },\r\n\r\n  addBlogPost: async (title, content) => {\r\n    const response = await axios.post(API_URL, { title, content });\r\n    return response.data;\r\n  },\r\n\r\n  deleteBlogPost: async (id) => {\r\n    const response = await axios.delete(`${API_URL}/${id}`);\r\n    return response.data;\r\n  },\r\n};\r\n","// components/admin/BlogPostManager.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { blogService } from '../../services/blogService';\r\n\r\nconst BlogPostManager = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [deleteInProgress, setDeleteInProgress] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchPosts();\r\n  }, []);\r\n\r\n  const fetchPosts = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const data = await blogService.getPosts();\r\n      setPosts(data);\r\n    } catch (err) {\r\n      setError('Failed to fetch blog posts');\r\n      console.error('Error fetching posts:', err);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      setDeleteInProgress(id);\r\n      await blogService.deleteBlogPost(id);\r\n      setPosts(posts.filter((post) => post._id !== id));\r\n    } catch (err) {\r\n      console.error('Error deleting post:', err);\r\n      alert('Failed to delete post');\r\n    } finally {\r\n      setDeleteInProgress(null);\r\n    }\r\n  };\r\n\r\n  if (isLoading) return <div className=\"p-6\">Loading...</div>;\r\n  if (error) return <div className=\"p-6 text-red-500\">{error}</div>;\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <h2 className=\"text-2xl font-bold\">Manage Blog Posts</h2>\r\n        <button \r\n          className=\"bg-blue-500 text-white px-4 py-2 rounded\"\r\n          onClick={() => {/* Add new post logic */}}\r\n        >\r\n          Add New Post\r\n        </button>\r\n      </div>\r\n      \r\n      {posts.length === 0 ? (\r\n        <p className=\"text-gray-500\">No blog posts found</p>\r\n      ) : (\r\n        <ul className=\"space-y-4\">\r\n          {posts.map((post) => (\r\n            <li key={post._id} className=\"border p-4 rounded-lg\">\r\n              <div className=\"flex justify-between items-center\">\r\n                <div>\r\n                  <h3 className=\"font-semibold\">{post.title}</h3>\r\n                  <p className=\"text-gray-600\">{post.createdAt}</p>\r\n                </div>\r\n                <div className=\"space-x-2\">\r\n                  <button \r\n                    className=\"bg-blue-500 text-white px-3 py-1 rounded\"\r\n                    onClick={() => {/* Edit logic */}}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button \r\n                    className={`bg-red-500 text-white px-3 py-1 rounded ${\r\n                      deleteInProgress === post._id ? 'opacity-50' : ''\r\n                    }`}\r\n                    onClick={() => handleDelete(post._id)}\r\n                    disabled={deleteInProgress === post._id}\r\n                  >\r\n                    {deleteInProgress === post._id ? 'Deleting...' : 'Delete'}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlogPostManager;"],"names":["API_URL","blogService","async","axios","get","data","delete","id","BlogPostManager","posts","setPosts","useState","isLoading","setIsLoading","error","setError","deleteInProgress","setDeleteInProgress","useEffect","fetchPosts","err","console","_jsx","className","children","_jsxs","onClick","length","map","post","title","createdAt","_id","filter","alert","handleDelete","disabled"],"sourceRoot":""}