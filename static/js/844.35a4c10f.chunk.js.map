{"version":3,"file":"static/js/844.35a4c10f.chunk.js","mappings":"0LAEA,MA0CA,EA1CsBA,IAAe,IAAd,KAAEC,GAAMD,EAC7B,OACEE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kFAAiFC,SAAA,CAC7FH,EAAKI,QACJC,EAAAA,EAAAA,KAAA,OAAKH,UAAU,gBAAeC,UAC5BE,EAAAA,EAAAA,KAAA,OACEC,IAAKN,EAAKI,MACVG,IAAKP,EAAKQ,MACVN,UAAU,kCAIhBD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKC,SAAA,EAClBE,EAAAA,EAAAA,KAAA,MAAIH,UAAU,2CAA0CC,SAAEH,EAAKQ,SAC/DH,EAAAA,EAAAA,KAAA,KAAGH,UAAU,qBAAoBC,SAAEH,EAAKS,cACvCT,EAAKU,eACJL,EAAAA,EAAAA,KAAA,OAAKH,UAAU,uBAAsBC,SAClCH,EAAKU,aAAaC,KAAI,CAACC,EAAMC,KAC5BR,EAAAA,EAAAA,KAAA,QAEEH,UAAU,2DAA0DC,SAEnES,GAHIC,OAQZb,EAAKc,OACJT,EAAAA,EAAAA,KAAA,KACEU,KAAMf,EAAKc,KACXE,OAAO,SACPC,IAAI,sBACJf,UAAU,wEAAuEC,SAClF,6BAKD,ECkCV,EAtEsBe,KACpB,MAAOC,EAAWC,IAAgBC,EAAAA,EAAAA,UAAS,KACpCC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,MAE7BK,EAAiBC,UACrB,IACEJ,GAAW,GACXE,EAAS,MACT,MAAMG,QAAaC,EAAAA,EAAiBC,eACpCV,EAAaQ,EACf,CAAE,MAAOG,GACPC,QAAQR,MAAM,6BAA8BO,GAC5CN,EAASM,EAAIE,SAAW,iCAC1B,CAAC,QACCV,GAAW,EACb,GAOF,OAJAW,EAAAA,EAAAA,YAAU,KACRR,GAAgB,GACf,IAECJ,GAEAjB,EAAAA,EAAAA,KAAA,OAAKH,UAAU,gDAA+CC,UAC5DE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,qEAKjBsB,GAEAvB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBC,SAAA,EAChCE,EAAAA,EAAAA,KAAA,MAAIH,UAAU,kCAAiCC,SAAC,6BAChDE,EAAAA,EAAAA,KAAA,KAAGH,UAAU,qBAAoBC,SAAEqB,KACnCnB,EAAAA,EAAAA,KAAA,UACE8B,QAAST,EACTxB,UAAU,oFAAmFC,SAC9F,kBAQLF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,8BAA6BC,SAAA,EAC1CE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,yCAAwCC,UACrDE,EAAAA,EAAAA,KAAA,MAAIH,UAAU,mCAAkCC,SAAC,gBAG7B,IAArBgB,EAAUiB,QACT/B,EAAAA,EAAAA,KAAA,OAAKH,UAAU,kDAAiDC,UAC9DE,EAAAA,EAAAA,KAAA,KAAGH,UAAU,gBAAeC,SAAC,gCAG/BE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,uDAAsDC,SAClEgB,EAAUR,KAAKX,IACdK,EAAAA,EAAAA,KAACgC,EAAa,CAEZrC,KAAMA,GADDA,EAAKsC,WAMd,C,oECnEH,MAAMT,EAAmB,CAC9BC,aAAcH,UACZ,IAEE,aADuBY,IAAAA,IAAQ,eACfX,IAClB,CAAE,MAAOJ,GAEP,MADAQ,QAAQR,MAAM,4BAA6BA,GACrC,IAAIgB,MAAM,kCAClB,G","sources":["components/portfolio/PortfolioItem.js","components/portfolio/PortfolioList.js","services/portfolioService.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst PortfolioItem = ({ item }) => {\r\n  return (\r\n    <div className=\"bg-white rounded-lg shadow-md overflow-hidden hover:shadow-lg transition-shadow\">\r\n      {item.image && (\r\n        <div className=\"relative h-48\">\r\n          <img \r\n            src={item.image} \r\n            alt={item.title}\r\n            className=\"w-full h-full object-cover\"\r\n          />\r\n        </div>\r\n      )}\r\n      <div className=\"p-6\">\r\n        <h3 className=\"text-xl font-semibold mb-2 text-gray-900\">{item.title}</h3>\r\n        <p className=\"text-gray-600 mb-4\">{item.description}</p>\r\n        {item.technologies && (\r\n          <div className=\"flex flex-wrap gap-2\">\r\n            {item.technologies.map((tech, index) => (\r\n              <span \r\n                key={index}\r\n                className=\"px-3 py-1 bg-gray-100 text-gray-700 rounded-full text-sm\"\r\n              >\r\n                {tech}\r\n              </span>\r\n            ))}\r\n          </div>\r\n        )}\r\n        {item.link && (\r\n          <a\r\n            href={item.link}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            className=\"mt-4 inline-block text-blue-600 hover:text-blue-700 transition-colors\"\r\n          >\r\n            View Project â†’\r\n          </a>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PortfolioItem;","import React, { useState, useEffect } from 'react';\r\nimport { portfolioService } from '../../services/portfolioService';\r\nimport PortfolioItem from './PortfolioItem';\r\n\r\nconst PortfolioList = () => {\r\n  const [portfolio, setPortfolio] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchPortfolio = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      const data = await portfolioService.getPortfolio();\r\n      setPortfolio(data);\r\n    } catch (err) {\r\n      console.error('Failed to fetch portfolio:', err);\r\n      setError(err.message || 'Failed to load portfolio items');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPortfolio();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-screen\">\r\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-gray-900\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"text-center py-12\">\r\n        <h2 className=\"text-2xl font-bold text-red-600\">Error Loading Portfolio</h2>\r\n        <p className=\"mt-2 text-gray-600\">{error}</p>\r\n        <button \r\n          onClick={fetchPortfolio}\r\n          className=\"mt-4 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition-colors\"\r\n        >\r\n          Try Again\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mx-auto px-4 py-8\">\r\n      <div className=\"flex justify-between items-center mb-8\">\r\n        <h2 className=\"text-3xl font-bold text-gray-800\">Portfolio</h2>\r\n      </div>\r\n\r\n      {portfolio.length === 0 ? (\r\n        <div className=\"text-center py-12 bg-white rounded-lg shadow-sm\">\r\n          <p className=\"text-gray-600\">No portfolio items found</p>\r\n        </div>\r\n      ) : (\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n          {portfolio.map((item) => (\r\n            <PortfolioItem \r\n              key={item._id} \r\n              item={item}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PortfolioList;","// src/services/portfolioService.js\r\nimport api from '../utils/api';\r\n\r\nexport const portfolioService = {\r\n  getPortfolio: async () => {\r\n    try {\r\n      const response = await api.get('/portfolio');\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching portfolio:', error);\r\n      throw new Error('Failed to fetch portfolio items');\r\n    }\r\n  }\r\n};"],"names":["_ref","item","_jsxs","className","children","image","_jsx","src","alt","title","description","technologies","map","tech","index","link","href","target","rel","PortfolioList","portfolio","setPortfolio","useState","loading","setLoading","error","setError","fetchPortfolio","async","data","portfolioService","getPortfolio","err","console","message","useEffect","onClick","length","PortfolioItem","_id","api","Error"],"sourceRoot":""}