{"version":3,"file":"static/js/243.b60c5443.chunk.js","mappings":"2MAIA,MAsFA,EAtFiBA,KACf,MAAM,SAAEC,IAAaC,EAAAA,EAAAA,KACfC,GAAWC,EAAAA,EAAAA,OAEVC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,CACvCC,KAAM,GACNC,MAAO,GACPC,SAAU,GACVC,gBAAiB,MAEZC,EAAWC,IAAgBN,EAAAA,EAAAA,WAAS,IACpCO,EAAOC,IAAYR,EAAAA,EAAAA,UAAS,MAmBnC,OACES,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sEAAqEC,UAClFC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,4BAA2BC,SAAA,EACxCF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,iCAAgCC,SAAC,aAC9CJ,IACCE,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kEAAiEC,SAC7EJ,KAGLK,EAAAA,EAAAA,MAAA,QAAMC,SA1BSC,UAEnB,GADAC,EAAEC,iBACElB,EAASK,WAAaL,EAASM,gBAAnC,CAIAE,GAAa,GACb,UACQZ,EAASI,GACfF,EAAS,SACX,CAAE,MAAOqB,GACPT,EAASS,EAAIC,SAAW,qBAC1B,CAAC,QACCZ,GAAa,EACf,CATA,MAFEE,EAAS,yBAWX,EAYkCE,UAAU,iBAAgBC,SAAA,EACtDF,EAAAA,EAAAA,KAAA,SACEU,KAAK,OACLC,YAAY,YACZV,UAAU,kCACVW,MAAOvB,EAASG,KAChBqB,SAAWP,GAAMhB,EAAY,IAAKD,EAAUG,KAAMc,EAAEQ,OAAOF,WAE7DZ,EAAAA,EAAAA,KAAA,SACEU,KAAK,QACLC,YAAY,QACZV,UAAU,kCACVW,MAAOvB,EAASI,MAChBoB,SAAWP,GAAMhB,EAAY,IAAKD,EAAUI,MAAOa,EAAEQ,OAAOF,WAE9DZ,EAAAA,EAAAA,KAAA,SACEU,KAAK,WACLC,YAAY,WACZV,UAAU,kCACVW,MAAOvB,EAASK,SAChBmB,SAAWP,GAAMhB,EAAY,IAAKD,EAAUK,SAAUY,EAAEQ,OAAOF,WAEjEZ,EAAAA,EAAAA,KAAA,SACEU,KAAK,WACLC,YAAY,mBACZV,UAAU,kCACVW,MAAOvB,EAASM,gBAChBkB,SAAWP,GAAMhB,EAAY,IAAKD,EAAUM,gBAAiBW,EAAEQ,OAAOF,WAExEZ,EAAAA,EAAAA,KAAA,UACEU,KAAK,SACLK,SAAUnB,EACVK,UAAU,oEAAmEC,SAE5EN,EAAY,iBAAmB,iBAGpCI,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaC,UAC1BF,EAAAA,EAAAA,KAACgB,EAAAA,GAAI,CAACC,GAAG,SAAShB,UAAU,oCAAmCC,SAAC,2CAKhE,C","sources":["components/auth/Register.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\n\r\nconst Register = () => {\r\n  const { register } = useAuth();\r\n  const navigate = useNavigate();\r\n  \r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: ''\r\n  });\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (formData.password !== formData.confirmPassword) {\r\n      setError('Passwords do not match');\r\n      return;\r\n    }\r\n    setIsLoading(true);\r\n    try {\r\n      await register(formData);\r\n      navigate('/login');\r\n    } catch (err) {\r\n      setError(err.message || 'Failed to register');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4\">\r\n      <div className=\"max-w-md w-full space-y-8\">\r\n        <h2 className=\"text-center text-3xl font-bold\">Register</h2>\r\n        {error && (\r\n          <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded\">\r\n            {error}\r\n          </div>\r\n        )}\r\n        <form onSubmit={handleSubmit} className=\"mt-8 space-y-6\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Full Name\"\r\n            className=\"w-full px-3 py-2 border rounded\"\r\n            value={formData.name}\r\n            onChange={(e) => setFormData({ ...formData, name: e.target.value })}\r\n          />\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            className=\"w-full px-3 py-2 border rounded\"\r\n            value={formData.email}\r\n            onChange={(e) => setFormData({ ...formData, email: e.target.value })}\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            className=\"w-full px-3 py-2 border rounded\"\r\n            value={formData.password}\r\n            onChange={(e) => setFormData({ ...formData, password: e.target.value })}\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Confirm Password\"\r\n            className=\"w-full px-3 py-2 border rounded\"\r\n            value={formData.confirmPassword}\r\n            onChange={(e) => setFormData({ ...formData, confirmPassword: e.target.value })}\r\n          />\r\n          <button\r\n            type=\"submit\"\r\n            disabled={isLoading}\r\n            className=\"w-full py-2 px-4 bg-blue-500 text-white rounded hover:bg-blue-600\"\r\n          >\r\n            {isLoading ? 'Registering...' : 'Register'}\r\n          </button>\r\n        </form>\r\n        <div className=\"text-center\">\r\n          <Link to=\"/login\" className=\"text-blue-500 hover:text-blue-600\">\r\n            Already have an account? Sign in\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;"],"names":["Register","register","useAuth","navigate","useNavigate","formData","setFormData","useState","name","email","password","confirmPassword","isLoading","setIsLoading","error","setError","_jsx","className","children","_jsxs","onSubmit","async","e","preventDefault","err","message","type","placeholder","value","onChange","target","disabled","Link","to"],"sourceRoot":""}