{"version":3,"file":"static/js/750.edc66967.chunk.js","mappings":"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","sources":["components/admin/PortfolioManager.js","services/portfolioService.js"],"sourcesContent":["// components/admin/PortfolioManager.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { portfolioService } from '../../services/portfolioService';\r\n\r\nconst PortfolioManager = () => {\r\n  const [portfolio, setPortfolio] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [deleteInProgress, setDeleteInProgress] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchPortfolio();\r\n  }, []);\r\n\r\n  const fetchPortfolio = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const data = await portfolioService.getPortfolio();\r\n      setPortfolio(data);\r\n    } catch (err) {\r\n      setError('Failed to fetch portfolio items');\r\n      console.error('Error fetching portfolio:', err);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      setDeleteInProgress(id);\r\n      await portfolioService.deletePortfolioItem(id);\r\n      setPortfolio(portfolio.filter((item) => item._id !== id));\r\n    } catch (err) {\r\n      console.error('Error deleting item:', err);\r\n      alert('Failed to delete portfolio item');\r\n    } finally {\r\n      setDeleteInProgress(null);\r\n    }\r\n  };\r\n\r\n  if (isLoading) return <div className=\"p-6\">Loading...</div>;\r\n  if (error) return <div className=\"p-6 text-red-500\">{error}</div>;\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <h2 className=\"text-2xl font-bold\">Manage Portfolio</h2>\r\n        <button \r\n          className=\"bg-blue-500 text-white px-4 py-2 rounded\"\r\n          onClick={() => {/* Add new item logic */}}\r\n        >\r\n          Add New Item\r\n        </button>\r\n      </div>\r\n\r\n      {portfolio.length === 0 ? (\r\n        <p className=\"text-gray-500\">No portfolio items found</p>\r\n      ) : (\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n          {portfolio.map((item) => (\r\n            <div key={item._id} className=\"border p-4 rounded-lg\">\r\n              {item.image && (\r\n                <img \r\n                  src={item.image} \r\n                  alt={item.title} \r\n                  className=\"w-full h-48 object-cover mb-4 rounded\"\r\n                />\r\n              )}\r\n              <h3 className=\"font-semibold\">{item.title}</h3>\r\n              <p className=\"text-gray-600 text-sm mb-4\">{item.description}</p>\r\n              <div className=\"flex justify-end space-x-2\">\r\n                <button \r\n                  className=\"bg-blue-500 text-white px-3 py-1 rounded\"\r\n                  onClick={() => {/* Edit logic */}}\r\n                >\r\n                  Edit\r\n                </button>\r\n                <button \r\n                  className={`bg-red-500 text-white px-3 py-1 rounded ${\r\n                    deleteInProgress === item._id ? 'opacity-50' : ''\r\n                  }`}\r\n                  onClick={() => handleDelete(item._id)}\r\n                  disabled={deleteInProgress === item._id}\r\n                >\r\n                  {deleteInProgress === item._id ? 'Deleting...' : 'Delete'}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PortfolioManager;","// src/services/portfolioService.js\r\nimport api from '../utils/api';\r\n\r\nexport const portfolioService = {\r\n  getPortfolio: async () => {\r\n    try {\r\n      const response = await api.get('/portfolio');\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching portfolio:', error);\r\n      throw new Error(error.response?.data?.message || 'Failed to fetch portfolio items');\r\n    }\r\n  },\r\n\r\n  createPortfolioItem: async (data) => {\r\n    try {\r\n      const response = await api.post('/portfolio', data);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error(error.response?.data?.message || 'Failed to create portfolio item');\r\n    }\r\n  },\r\n\r\n  updatePortfolioItem: async (id, data) => {\r\n    try {\r\n      const response = await api.put(`/portfolio/${id}`, data);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error(error.response?.data?.message || 'Failed to update portfolio item');\r\n    }\r\n  },\r\n\r\n  deletePortfolioItem: async (id) => {\r\n    try {\r\n      const response = await api.delete(`/portfolio/${id}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error(error.response?.data?.message || 'Failed to delete portfolio item');\r\n    }\r\n  }\r\n};"],"names":["PortfolioManager","portfolio","setPortfolio","useState","isLoading","setIsLoading","error","setError","deleteInProgress","setDeleteInProgress","useEffect","fetchPortfolio","async","data","portfolioService","getPortfolio","err","console","_jsx","className","children","_jsxs","onClick","length","map","item","image","src","alt","title","description","_id","id","deletePortfolioItem","filter","alert","handleDelete","disabled","api","get","_error$response","_error$response$data","Error","response","message","createPortfolioItem","post","_error$response2","_error$response2$data","updatePortfolioItem","put","_error$response3","_error$response3$data","delete","_error$response4","_error$response4$data"],"sourceRoot":""}