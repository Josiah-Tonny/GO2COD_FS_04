{"version":3,"file":"static/js/902.3aaac772.chunk.js","mappings":"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","sources":["components/portfolio/PortfolioList.js","services/portfolioService.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { portfolioService } from '../../services/portfolioService';\r\n\r\nconst PortfolioList = () => {\r\n  const [portfolio, setPortfolio] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchPortfolio = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      console.log('Starting portfolio fetch...');\r\n      const data = await portfolioService.getPortfolio();\r\n      console.log('Portfolio data received:', data);\r\n      setPortfolio(data);\r\n    } catch (err) {\r\n      console.error('Portfolio fetch failed:', err);\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPortfolio();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-screen\">\r\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-gray-900\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"text-center py-12\">\r\n        <h2 className=\"text-2xl font-bold text-red-600\">Error</h2>\r\n        <p className=\"mt-2 text-gray-600\">{error}</p>\r\n        <button \r\n          onClick={fetchPortfolio}\r\n          className=\"mt-4 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\"\r\n        >\r\n          Try Again\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mx-auto px-4 py-8\">\r\n      <h2 className=\"text-3xl font-bold mb-8\">Portfolio</h2>\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n        {portfolio.length > 0 ? (\r\n          portfolio.map((item) => (\r\n            <div key={item._id} className=\"bg-white rounded-lg shadow-md p-6\">\r\n              <h3 className=\"text-xl font-semibold\">{item.title}</h3>\r\n              <p className=\"text-gray-600 mt-2\">{item.description}</p>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <div className=\"col-span-full text-center text-gray-600\">\r\n            No portfolio items found\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PortfolioList;","// src/services/portfolioService.js\r\nimport api from '../utils/api';\r\n\r\nexport const portfolioService = {\r\n  getPortfolio: async () => {\r\n    try {\r\n      const response = await api.get('/portfolio');\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching portfolio:', error);\r\n      throw new Error(error.response?.data?.message || 'Failed to fetch portfolio items');\r\n    }\r\n  },\r\n\r\n  createPortfolioItem: async (data) => {\r\n    try {\r\n      const response = await api.post('/portfolio', data);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error(error.response?.data?.message || 'Failed to create portfolio item');\r\n    }\r\n  },\r\n\r\n  updatePortfolioItem: async (id, data) => {\r\n    try {\r\n      const response = await api.put(`/portfolio/${id}`, data);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error(error.response?.data?.message || 'Failed to update portfolio item');\r\n    }\r\n  },\r\n\r\n  deletePortfolioItem: async (id) => {\r\n    try {\r\n      const response = await api.delete(`/portfolio/${id}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error(error.response?.data?.message || 'Failed to delete portfolio item');\r\n    }\r\n  }\r\n};"],"names":["PortfolioList","portfolio","setPortfolio","useState","loading","setLoading","error","setError","fetchPortfolio","async","console","log","data","portfolioService","getPortfolio","err","message","useEffect","_jsx","className","children","_jsxs","onClick","length","map","item","title","description","_id","api","get","_error$response","_error$response$data","Error","response","createPortfolioItem","post","_error$response2","_error$response2$data","updatePortfolioItem","id","put","_error$response3","_error$response3$data","deletePortfolioItem","delete","_error$response4","_error$response4$data"],"sourceRoot":""}